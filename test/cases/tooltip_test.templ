package test

import (
	"github.com/CanPacis/pacis/ui"
	"time"
)

templ tooltipTest() {
	<div class="flex items-center gap-8">
		@ui.Tooltip("Tooltip text") {
			Hover Me!
		}
		@ui.Tooltip("Tooltip text").AddClass("text-p-red-800").RemoveClass("shadow-lg") {
			Custom Style
		}
		@ui.Tooltip("Tooltip text").NoHover() {
			@ui.Button().Attr("x-on:click", "hover = !hover") {
				Click Me!
			}
		}
	</div>
}

templ tooltipWithDelayTest() {
	<div class="flex items-center gap-2">
		@ui.Tooltip("Tooltip text").Delay(time.Second * 2) {
			I have some delay
		}
		@ui.Tooltip("Tooltip text").Delay(time.Second * 2).NoHover() {
			@ui.Button().Attr("x-on:click", "hover = !hover") {
				Delay with click does not work
			}
		}
	</div>
}

templ tooltipPositionTest() {
	<div class="flex flex-wrap items-center gap-2">
		@ui.Tooltip("Tooltip text").Position(ui.AnchorTopStart) {
			@ui.Button() {
				This is top start
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorTopCenter) {
			@ui.Button() {
				This is top center
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorTopEnd) {
			@ui.Button() {
				This is top end
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorBottomStart) {
			@ui.Button() {
				This is bottom start
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorBottomCenter) {
			@ui.Button() {
				This is bottom center
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorBottomEnd) {
			@ui.Button() {
				This is bottom end
			}
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorLeftStart) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorLeftCenter) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorLeftEnd) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorRightStart) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorRightCenter) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
		@ui.Tooltip("Tooltip text").Position(ui.AnchorRightEnd) {
			@ui.IconButton("search").Variant(ui.SizeHuge)
		}
	</div>
}

func init() {
	page := NewTestPage(UITestPage, "Tooltip", "A tooltip is a small, hover-activated popup that provides additional information or context about a UI element without cluttering the interface", "tooltip")
	page.Define("Tooltip", tooltipTest())
	page.Define("Tooltip with Delay", tooltipWithDelayTest())
	page.Define("Tooltip Position", tooltipPositionTest())
	RegisterPage(page)
}
